/* /////////////////////////
BUTTONS
///////////////////////// */

button,
button a {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--fs-400);
  gap: 0.4rem;
  min-width: fit-content;
  padding: 0.8rem 1.6rem;
}

button:has(a) {
  padding: 0;
}

button {
  text-wrap: nowrap;
  text-transform: capitalize;
  background-color: transparent;
  border-radius: 0.4rem;
  position: relative;
  overflow: hidden;
  outline: none;
  border: none;
  user-select: none;
  cursor: pointer;
}

button:active {
  scale: 0.99;
}

button:focus-visible {
  box-shadow: 0 0 0 2px var(--clr-white), 0 0 0 4px var(--clr-primary);
}

button:disabled,
fieldset input:disabled,
fieldset label:has(input:disabled),
.check-radio-box:has(input:disabled) *,
*[aria-disabled="true"] {
  opacity: 0.5;
  pointer-events: none;
  user-select: none;
}

button.primary:disabled {
  opacity: 1;
}

button.primary:disabled::before {
  background-color: var(--clr-primary-dark);
}

button:has(.loader.spinner):disabled > *:not(:last-child) {
  display: none;
}

:is(button.primary, button.fab) {
  font-weight: 500;
  background: var(--gradient-primary);
  color: var(--clr-white);
  max-width: 35.2rem;
}

:is(button.primary, button.fab)::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--clr-primary);
  z-index: -1;
}

:is(button.primary, button.fab):hover::before {
  background-color: transparent;
}

:is(button.primary, button.fab):active::before {
  background-color: var(--clr-primary-dark);
}

:is(button.primary, button.fab):focus-visible:before {
  background-color: transparent;
}

button.fab {
  position: fixed;
  z-index: 1;
  bottom: 1.6rem;
  right: 1.6rem;
  border-radius: 50%;
  width: 5.6rem;
  height: 5.6rem;
  aspect-ratio: 1;
  box-shadow: 0 0 16px 16px #ffffffa4;
}

button.fab .text {
  display: none;
}

@media (min-width: 769px) {
  button.fab {
    border-radius: 1.6rem;
    width: fit-content !important;
    aspect-ratio: 0;
    padding: 0.8rem 1.6rem;
  }
  button.fab .text {
    display: block;
  }
}

button.ghost {
  border: 1px solid var(--clr-primary);
}

button.text {
  padding: 0.4rem;
  width: fit-content;
  color: var(--clr-accent);
}

button.text:has(a) {
  padding: 0;
}
button.text a {
  padding: 0.4rem;
}

p button.text {
  display: inline;
  font: inherit;
  padding: 0;
}

button.ghost:hover,
button.text:hover {
  background-color: var(--clr-grey-bg);
}

button.ghost:active,
button.text:active {
  background-color: var(--clr-accent-hover);
}

button.icon {
  border-radius: 100% !important;
  --size: 3.2rem;
  width: var(--size);
  min-width: var(--size);
  height: var(--size);
  min-height: var(--size);
  aspect-ratio: 1;
  padding: 0;
}

button.icon:hover {
  background-color: var(--clr-accent-hover);
}

/* Negative Buttons */
:is(button.primary, button.fab).negative {
  background: var(--clr-status-negative-light-text) !important;
}

:is(button.primary, button.fab).negative::before {
  background-color: transparent;
}

button.ghost.negative {
  border-color: var(--clr-status-info-light-text);
}

button.text.negative,
button.icon.negative,
button.ghost.negative {
  color: var(--clr-status-negative-light-text);
}

button.icon:active {
  scale: 0.9;
  background-color: var(--clr-accent-focus);
}

/* Mini Buttons */

button.mini {
  color: var(--clr-black);
  border-color: var(--clr-grey-divider) !important;
  padding: 0.4rem 0.8rem;
}

button.mini .icon {
  --size: 1.8rem;
}

button.overlay-badge {
  --content: "";
}

button.overlay-badge::after {
  content: var(--content);
  font-family: var(--ff-def);
  font-size: var(--fs-100);
  background-color: var(--clr-accent);
  color: var(--clr-white);
  border-radius: 1.6rem;
  font-weight: 600;
  padding: 0.4rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

form .btn-box {
  display: flex;
  gap: 1.6rem;
  align-items: center;
  justify-content: space-between;
  padding: 1.6rem;
  flex-wrap: wrap;
  width: 100%;
}

form .btn-box :is(button.primary, button.ghost) {
  width: 100%;
}

button.icon.large {
  --size: 4.4rem;
}

button.icon.large .icon {
  --size: 3.6rem;
}

@media (max-width: 769px) {
  button.primary,
  button.fab {
    max-width: 100%;
  }

  form .btn-box {
    padding: 1.6rem 0;
  }

  form .btn-box :is(button.primary, button.ghost) {
    order: -1;
  }
}

/* TOGGLE BUTTON BOX */
.toggle-btn-box {
  display: flex;
  gap: 0.4rem;
  padding: 0.4rem;
  background-color: var(--clr-primary-hover);
  border-radius: 100rem;
  width: fit-content;
}

.toggle-btn-box > :is(button.primary, button.text, button.ghost) {
  border-radius: 100rem;
  width: 100%;
  max-width: 100%;
  background-color: transparent;
  margin: 0;
  padding: 0.8rem;
}

.toggle-btn-box > :is(button.primary, button.text, button.ghost):hover {
  background-color: var(--clr-primary-focus);
}

.toggle-btn-box button.selected {
  background-color: var(--clr-primary);
  color: var(--clr-white);
}

.toggle-btn-box button.selected:hover {
  background-color: var(--clr-primary-light);
}

/* /////////////////////////
  INPUTS
  ///////////////////////// */

fieldset {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  justify-content: stretch;
  position: relative;
  margin: 0.4rem 0;
  gap: 0.4rem;
  border: none;
  outline: none;
  position: relative;
  width: 100%;
  max-width: 100%;
  min-width: 0;
}

/* ORDER TO EACH OF THE ELEMENT OF A INPUT */

fieldset label {
  order: 1;
}

fieldset :is(.text-input, .check-radio-box, .icon-frame, .otp-input) {
  order: 2;
}

fieldset .trail {
  order: 3;
}

fieldset .msg.error {
  order: 4;
}

fieldset .msg.warn {
  order: 5;
}

fieldset .msg.success {
  order: 6;
}

fieldset .msg.info {
  order: 7;
}

fieldset button,
fieldset .drop-down-menu {
  order: 8;
}

fieldset .msg {
  order: 9;
  animation: fieldsetMsg 0.5s linear;
}

@keyframes fieldsetMsg {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

fieldset button.primary {
  max-width: 100%;
}

.check-radio-box label input {
  order: -1;
}

fieldset label {
  cursor: text;
  text-wrap: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  margin-bottom: -1.4rem;
  margin-left: 0.8rem;
  z-index: 11;
  font-size: var(--fs-200);
  color: var(--clr-grey-text);
  width: fit-content;
  background-color: var(--clr-white);
  padding: 0 0.4rem;
  border-radius: 0.4rem;
  max-width: 100%;
}

fieldset:has(.check-radio-box) label {
  margin-bottom: 0;
}

fieldset:has(.text-input:hover, .text-input:focus) label {
  color: var(--clr-accent);
}

fieldset .text-input,
fieldset .icon-frame {
  outline: none;
  border: none;
  font-size: var(--fs-400);
  border-radius: 0.4rem;
  border: 1px solid var(--clr-grey-divider);
  background-color: var(--clr-white);
}

fieldset .text-input {
  padding: 0.8rem;
  padding-top: 1.2rem;
}

fieldset .text-input:hover,
fieldset .icon-frame:has(.text-input:hover),
fieldset .text-input:focus,
fieldset .icon-frame:has(.text-input:focus) {
  border-color: var(--clr-grey-text);
  background-color: var(--clr-grey-bg-light);
}

fieldset .text-input:focus,
fieldset .icon-frame:focus {
  border-color: var(--clr-black);
}

fieldset textarea {
  resize: vertical;
  height: 6.5rem;
  min-height: 6.5rem;
  max-height: 36rem;
}

fieldset select {
  appearance: none;
}

fieldset input[type="file"] {
  cursor: pointer;
}

/* Verification Code or OTP Input */

fieldset .otp-input {
  display: flex;
  justify-content: space-evenly;
  gap: 0.8rem;
  max-width: 35.2rem;
}

fieldset .otp-input .text-input {
  font-size: var(--fs-500);
  font-family: var(--ff-mono);
  max-width: 5.2rem;
  aspect-ratio: 1;
  text-align: center;
  background-color: var(--clr-white);
  font-weight: 600;
}

fieldset .otp-input .text-input:hover {
  background-color: var(--clr-grey-bg);
}

fieldset .otp-input .text-input:focus {
  background-color: var(--clr-primary-hover);
}

fieldset .text-input[autocomplete="name"] {
  text-transform: capitalize;
}

/* Icon Frame */

fieldset .icon-frame {
  display: flex;
  align-items: center;
  gap: 0.4rem;
  overflow: hidden;
  position: relative;
  z-index: 10;
}

fieldset .icon-frame :is(.lead, .trail) {
  margin-top: 0.4rem;
}

fieldset .icon-frame .lead {
  order: 1;
  padding-left: 0.8rem;
}

fieldset .icon-frame .trail {
  order: 3;
  padding-right: 0.8rem;
}

fieldset .icon-frame button.icon:hover {
  background-color: var(--clr-primary-focus);
}

fieldset .icon-frame .text-input {
  order: 2;
  border: none;
  padding: 0.8rem;
  padding-top: 1.2rem;
  border-radius: 0;
}

fieldset .icon-frame input {
  width: 100%;
}

fieldset .password-visibility-btn img {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  width: 60%;
}

fieldset .password-visibility-btn .eye-slash,
fieldset .password-visibility-btn.visible .eye {
  opacity: 0;
  visibility: hidden;
}
fieldset .password-visibility-btn .eye,
fieldset .password-visibility-btn.visible .eye-slash {
  opacity: 1;
  visibility: visible;
}

/* /////////////////////////
RADIO AND CHECKBOX
///////////////////////// */

.check-radio-box {
  padding: 0 0.4rem;
  display: flex;
  flex-direction: column;
}

.check-radio-box label {
  gap: 0.8rem !important;
  font-size: var(--fs-400);
  color: var(--clr-text-black);
  justify-content: start;
  align-items: center;
  padding: 0.4rem;
  border-radius: 0.2rem;
  cursor: pointer;
  text-align: left;
}

.check-radio-box label:has(input:hover) {
  color: var(--clr-black) !important;
  background-color: var(--clr-primary-hover);
}
.check-radio-box input {
  appearance: none;
  --size: 2rem;
  width: var(--size);
  aspect-ratio: 1;
  padding: 0;
  border: none;
  border-radius: 0.4rem;
  box-shadow: inset 0 0 0 2px var(--clr-primary);
  background: var(--clr-white) center 0.5rem / calc(var(--size) - 0.6rem)
    url("/static/assets/check-large.png") no-repeat;
  position: relative;
  cursor: pointer;
  z-index: 1;
}

.check-radio-box input:checked {
  box-shadow: inset 0 0 0 2px var(--clr-primary-dark);
  background-position: center;
  background-color: var(--clr-primary-dark);
}

.check-radio-box input[type="radio"] {
  border-radius: 50%;
  background: none;
}

.check-radio-box input[type="radio"]:checked {
  box-shadow: inset 0 0 0 3px var(--clr-primary-dark),
    inset 0 0 0 6px var(--clr-white), inset 0 0 0 10px var(--clr-primary-dark);
}

/* CUSTOM INPUTS */
.range-input-box {
  display: flex;
  align-items: center;
  gap: 0.8rem;
}

/* INPUT TAG FEEDBACKS and Certain Notes on the page */

:is(fieldset, .snackbar) .msg,
.note {
  --clr-status: var(--clr-grey-text);
  --clr-status-bg: var(--clr-grey-bg);
  gap: 0.8rem;
  justify-content: start;
  align-items: center !important;
  text-align: start !important;
  position: relative;
  font-size: var(--fs-300);
  color: var(--clr-status) !important;
  stroke: var(--clr-status) !important;
  margin: 0.2rem 0;
  width: 100%;
}

:is(fieldset .msg, .snackbar .msg, .note) > span.icon {
  align-self: flex-start;
}

:is(fieldset, .note) svg.icon {
  --size: 1.8rem;
}

fieldset .msg.error,
.note.error,
.snackbar.error {
  --clr-status: var(--clr-status-negative-light-text);
  --clr-status-bg: var(--clr-status-negative-light-bg);
}

fieldset .msg.success,
.note.success {
  --clr-status: var(--clr-status-success-light-text);
  --clr-status-bg: var(--clr-status-success-light-bg);
}

fieldset .msg.info,
.note.info {
  --clr-status: var(--clr-status-info-light-text);
  --clr-status-bg: var(--clr-status-info-light-bg);
}

fieldset .msg.warn,
.note.warn {
  --clr-status: var(--clr-status-warn-light-text);
  --clr-status-bg: var(--clr-status-warn-light-bg);
}

.note {
  margin-bottom: 0;
  padding: 1.6rem;
  border-radius: 1.6rem;
  background-color: var(--clr-status-bg);
}
